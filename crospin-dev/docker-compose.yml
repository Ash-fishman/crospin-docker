version: "3.7"

services:
  postgres-crospin:
    container_name: postgres-crospin
    image: postgres:10-alpine
    restart: "no"
    ports:
      - "$POSTGRES_PORT:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
      PGPASSWORD: ${POSTGRES_ADMIN_PASSWORD}
    volumes:
      - my-db:/var/lib/postgresql/data:cached
    networks:
      - crospin

  localstack-crospin:
    container_name: localstack-crospin
    image: localstack/localstack-full:0.12.6
    ports:
      - "${AWS_PORT}:4566"
      - "8088:8088"
    networks:
      - crospin
    environment:
      - SERVICES=s3
      - PORT_WEB_UI=8088
      - DEFAULT_REGION=us-west-1
      - DATA_DIR=./localstack/dev
    volumes:
      - ./localstack/docker-entrypoint-initaws.d:/docker-entrypoint-initaws.d

  backend-crospin:
    image: node:16.13.1
    user: node
    command: npm run start:debug
    container_name: backend-crospin
    working_dir: $CROSPIN_BACKEND_FOLDER
    volumes:
      - "../../crospin-backend:$CROSPIN_BACKEND_FOLDER:cached"
    ports:
      - "3001:3001"
    depends_on:
      - postgres-crospin
      - localstack-crospin
    env_file: .env
    networks:
      - crospin    

  frontend-crospin:
    image: node:16.13.1
    user: node
    container_name: frontend-crospin
    working_dir: $CROSPIN_FRONTEND_FOLDER
    command: npm run dev
    volumes:
      - "../../crospin-webapp:$CROSPIN_FRONTEND_FOLDER:cached"
    ports:
      - "3000:3000"
    networks:
      - crospin
    environment:
      - "REACT_APP_JWT_SECRET_KEY=$JWT_SECRET_KEY"
      - "REACT_APP_FACEBOOK_APP_ID=$FACEBOOK_APP_ID"
      - "REACT_APP_TIMEOUT=10000"      

volumes:
  my-db:

networks:
  crospin:
    name: crospin-network
